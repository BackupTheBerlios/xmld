* Implement XMLDList mechanism instead of XMLD*Table for
  each structure. (done)

* Remove XMLDPart and revert the initializer to the old
way -- XMLDPart won't be used out of the initializer.
(done)

* Create an *_init function for each structure that
gets called by the *_create function, such that
a structure obtained in a way different from dynamic
allocation (e.g shared memory) can be initialized
just as a dynamically allocated one. (cancelled)

* Create a generic XMLDTable structure to maintain
static size lists of objects. And modify structures
to use XMLDTable where useful. (done -- and not used)

* Use a XMLDTable of XMLDConnection's in sosel. 
(cancelled)

* Remove xmld_status_t (and errors.h) from every
where and use int (such that 0 = success, -1 = error 
and other numbers mean special return values) instead.
(done)

* Create a hash table implementation for places where
search speed is important (XMLDHashTable), and provide
APIs in XMLDEngine and XMLDFunc (...?) in that form:

XMLDEngine_create_hashtable(...)
XMLDEngine_add_to_hashtable(...)
XMLDEngine_search_hashtable(...)

* Rewrite the query parser (xmld-sql.y) to [1] fit the 
new query specification and [2] to respect the object-
oriented foundation.

* Add a name field to XMLDEngine. This should normally
involve creation of a function that searches a list
of XMLDEngine's by name. (done)

* For XMLDEngine, make the engine functions return
short instead of int to indiciate success/failure of
operation in order to use memory more wisely (?).
(done)

* Modify somanager and sosel so it respects the new 
object-oriented foundation and other editions. (done)

* Write a skeleton do-nothing engine, and attach it to
the list of XMLDEngine's which serve the requests.

* Check all the code for usage of strlen->malloc->strcpy
must be strlen+1->malloc->strcpy, because strlen doesn't
count the null character. (done)

* Check all the code for realloc() while iterators are
on the realloc'd memory segment. These iterators must
be updated for realloc may change the address of the
realloc'd segment.

* Fix usage of cfg in all the parts that currently
use it incorrectly: sosel, somanager, mtasker. (done)

* Use cfg in sosel to determine the timeout period
of select(). (done)

* Use *_engine cfg functions to get the engine
which is to be used with a given file in
fmanager. (done)

* Remove usage of XMLDMemPool from qp, and check
for usage of it in other parts.

* Implement ERROR_RESPONSE such that it depends
on a variable (e.g xmld_errno).

* Use ERROR_RESPONSE instead of perror.

* Remove/Secure usage of SIGUSR1 in mtasker.

* Add a MIME figurer part (mfigure) which det-
rmines the mime type of a given file, and
implements mfigure_get_mime(char *). Integrate
that with cfg_get_engine, such that if an engine
for the given file wasn't found, mfigurer is used
to figure out the mime type of that file, and cfg_
get_engine finally returns the value returned by
cfg_get_mime_engine. (done -- as a skeleton that
always returns "text/xml" (for now!))

* Add a field to XMLDRequest that carries the full
file name + path from the root in order to use it
easily in fmanager (full_file). (cancelled)

* Instead of using full_file and consuming memory
in XMLDRequest, create a function of XMLDWork
-- XMLDWork_get_full_file, which concatenates
curr_dir of XMLDConnection with file of XMLDRequest.
(done)

* Create the engine_list global variable in a sepa
rate module file. (done)

* Replace usage of xmld_types.h every where with
the new structures of the object-oriented foundation.
