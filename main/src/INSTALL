# The OpenXMLD 0.4.0 INSTALL document
-------------------------------------

Note: This document is a temproary installation guide,
at a later point a configure and a make script would
be available.

Note #2: The OpenXMLD is not guaranteed to work except
on the development platform which has the following
charasteristics:

Linux 2.4.8-26mdk
glibc 2.2.4
gcc 3.3
GNU bison 1.28
flex 2.5.4 

# Step 1: Parser code generation
--------------------------------

In main/src of the distribution:

$ bison -d xmld-sql.y
$ flex -i -f xmld-sql.lex

These files should by now be generated in main/src:

xmld-sql.tab.h
xmld-sql.tab.c
lex.yy.c

# Step 2: Compilation:
----------------------

In main/src of the distribution:

$ gcc -c cfg.c cfg_parser.c dutils.c engine_list.c
fmanager.c func_list.c mfigure.c mutils.c passfd.c
qp.c somanager.c sutils.c twalker.c xmld_aggr_table.c
xmld.c xmld_col.c xmld_cond.c xmld_connection.c 
xmld_directive.c xmld_engine.c xmld_errors.c 
xmld_expr.c xmld_func.c xmld_list.c xmld_request.c
xmld_resource.c xmld_response.c xmld_row.c
xmld_sockets.c xmld_work.c xmld-sql.tab.c lex.yy.c 
-DUSE_PTASKER -DUSE_ENGINE_XMLD
$ cd ptasker
$ gcc -c ptasker.c
$ cd ..
$ cd engine_xmld
$ gcc -c engine_xmld.c format_manip.c element_op.c 
-DUSE_PTASKER -DUSE_ENGINE_XMLD
$ cd ..

The first shell command generates 2-3 warnings.

# Step 3: Linking:
------------------

In main/src of the distribution:

$ gcc cfg.o cfg_parser.o dutils.o engine_list.o 
engine_xmld/engine_xmld.o engine_xmld/format_manip.o 
engine_xmld/element_op.o fmanager.o func_list.o 
lex.yy.o mfigure.o mutils.o ptasker/ptasker.o qp.o
somanager.o sutils.o twalker.o xmld_aggr_table.o 
xmld.o xmld_col.o xmld_cond.o xmld_connection.o
xmld_directive.o xmld_engine.o xmld_expr.o xmld_func.o
xmld_list.o xmld_request.o xmld_resource.o 
xmld_response.o xmld_row.o xmld_work.o xmld-sql.tab.o
xmld_sockets.o passfd.o xmld_errors.o -lfl -lm -o xmld

# Step 4: Running and testing:
------------------------------

In main/src of the distribution:

$ gcc xmldtry.c -o xmldtry

This compiles a small test program which implies
availability of a file "my_file.xml" in the document
root of the server (see xmld.conf of the distribution),
write a file "my_file.xml" in "/" which is the default
document root (change that if neccessary), the content
of my_file.xml should be something like that:

<myfile name="myname">kkk<b name="hisname"/><c name="i"/>
</myfile>

$ ./xmld

In another console:

$ ./xmldtry

Given the exact document as above the output should be:

myname	;i	;

You can modify my_file.xml and the query inside xmldtry.c
(at the end -- before the write call) to get different
results, as of this release only SELECT and SELECT with
WHERE queries are supported. Remember to recompile xmldtry.c
after each edition :-)

# Step 5: What else
-------------------

Read the QUERY.html document to understand the xmld-sql query
language, write different xml documents in the document root
and run xmldtry to see the results, and modify the query inside
xmldtry.c and test as much as you can, and report all problems
that you find (I'm sure there are much) to: 

xmld-dev@lists.berlios.de

Author: Khalid Al-Kary (khalid_kary at hotmail dot com)

-- EOF --
